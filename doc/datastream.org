#+TITLE: Mercedes-Benz model 124 air conditioner (SA code 580) data stream
#+AUTHOR: Lauri Lindholm
#+EMAIL: archyx@pp.htv.fi
#+OPTIONS: toc:2

* Disclaimer

The information in this document is provided as is with no warranty of
any kind.  The information provided is based on reverse engineering
efforts which means that its accuracy cannot be guaranteed.


* What?

This document describes the format of the raw "actual value" data
stream provided by some Mercedes-Benz model 124 air conditioning
control modules.

So far it is to be figured out if only certain modules from certain
manufacturers supply this stream, but it is known that not all of them
do.  It may have been a diagnostic data experiment with the early
digital control units or just for manufacturing stage function check.

The terminology used here may differ from the manufacturer's
terminology.

See https://github.com/the1stArchyx/mb124-ac-decoder for the latest
version of this document.


* Packet format

A whole packet is made of individual 41 bytes.  When capturing data
all the way from switch-on, the control module will output 32 bytes of
garbage before a consistent data packet is transmitted.  The FTDI
serial cable used during research may catch one or two bytes of 00
before actual data.


** 0x00, 0x02 – temperature setting dial, left and right              :input:

These are signed bytes in range between -56 (0xc8, 14 °C) and +24
(0x18, 30 °C).  The actual temperature value in °C can be calculated
with the following formula:

: actual = (raw + 126) / 5

The actual value in °F can be calculated with

: actual_F = (raw + 166) / 2

These values indicate the user-requested temperatures from the dial
positions on the control unit's operating panel.  Due to mechanical
reasons the temperature on the dial most likely will not exactly match
the internal control unit's value.  Otherwise the temperature
calculation formula is currently expected to be accurate.

The table below shows also Fahrenheit temperature equivalents on
possible US version of the control unit.  Be aware that due to the
analog approximate nature of this design the values indicated aren't
exact when converting between temperature units.

| value | °C | °F | printed on dial |
|-------+----+----+-----------------|
|   -56 | 14 | 55 | no              |
|   -36 | 18 | 65 | yes             |
|   -16 | 22 | 75 | yes             |
|     4 | 26 | 85 | yes             |
|   +24 | 30 | 95 | no              |


** 0x01, 0x03 – temperature adjustment target, left and right      :internal:

These are signed bytes that indicate the temperatures the control
module is attempting to adjust to.  It is biased by multiple factors,
like both user-requested temperatures and the outside air temperature.
For actual value, see 0x00 above.


** 0x04 – timer, self-calibration                                  :internal:

Right after switching on ignition this counter counts from 120 (0x78)
down to 0 once in about 10 minutes, ie. in 5 second steps.  The
counter appears to be used for timing some sort of self-calibration.
During the calibration time the temperature control may seem erratic.

1) At 120 (10 min. left) — ignition was switched on, counter starts.
2) At 114 (30 s. after, 9 min. 30 s. left) — First self-calibration.
3) At 96 (2 min. after, 8 min. left) — Automatic air recirculation for
   intense cooling is enabled.
4) At 60 (5 min. after, 5 min. left) — Second self-calibration.
5) At 0 (10 min. after, timer ends) — Third self-calibration.


** 0x05, 0x06 – mixing chamber temperature, left and right            :input:

(Note!  The actual temperature value here might not be accurate as
it's not directly comparable to another temperature value.)

These unsigned bytes range between 0 (12 °C) and 243 (0xf3, 72.75 °C).
The actual value in °C can be calculated with the following formula:

: actual = (raw + 48) / 4

The mixing chamber temperature affects the feedback loop for the water
valve control.

In some terminology this may be inaccurately called heater core
temperature.


** 0x07 – interior air temperature                                    :input:

This signed byte ranges between -128 (0x80, -0.4 °C) and +126 (0x7e,
50.4 °C).  The actual value in °C can be obtained with the following
formula:

: actual = (raw + 126) / 5

The math formula of interior temperature follows the same formula as
the temperature setting dials.  This is currently expected to be
accurate.


** 0x08 – exterior air temperature                                    :input:

This signed byte ranges between -64 (0xc0, -32 °C) and 126 (0x7e,
63 °C).  The formula for the actual value in °C is as follows:

: actual = raw / 2

This formula appears to be accurate.


** 0x09, 0x0a – temperature control, left and right                :internal:

These signed bytes are the differences of dampened interior
temperature (see 0x19) and the temperature adjustment targets of the
respective sides.  The values range between -128 (0x80, -25.6 °C) and
+127 (0x7f, +25.4 °C).  The actual value in °C can be calculated with
the following formula:

: actual = raw / 5

Negative values bias towards heating and positive values towards
cooling.  The effective range for heating control (see 0x0c) is from
-50 (0xce, -10.0 °C) to +23 (0x17, +4.6 °C).


** TODO 0x0b – control bias, exterior air temperature              :internal:

This signed byte reacts to change of exterior temperature and
temperature dial values.  The exact math to it is not fully known,
yet.  What is currently known is that...

1. a change of +1 (0.5 °C) exterior temperature affects the bias by
   +1.  In many cases it has been observed that exterior temperature
   value 50 (25.0 °C) equals bias value 0.
2. setting the temperature of one side higher than the other causes a
   negative weighting on the bias value.
3. a change of +2 of the bias affects the adjustment targets by -1
   (-0.2 °C).  (By observation, the change of the least significant
   bit of the bias is irrelevant.)

Based on logged data so far the range appears to be from -45 to +34.

As with most other temperature control bias values, negative values
bias towards heating and positive values towards cooling.


** 0x0c, 0x0d – heater drive, left and right                       :internal:

These unsigned bytes range between 0 and 255 (0xff).  They are used to
drive the heating control.  0 calls for no heating and 255 for maximum
heating.  When the target temperature is reached, this value will
balance around 80 (0x50).

Change of 1 unit (0.2 °C) of temperature differential control value
affects this value directly about 3-4 units (0.75-1.00 °C).


** 0x0e, 0x0f – heater feedback reference, left and right          :internal:

These values slowly follow the values of 0x0c and 0x0d respectively.
These values provide the temperature references for the valve control
feedback loop.  The actual value in °C can be calculated with the
following formula:

: actual = raw / 4


** 0x10, 0x11 – heating control, left and right                    :internal:

These values follow the values of 0x0c and 0x0d with a dampening.
It's not yet clear how these values affect the heating control.


** 0x12, 0x13 – water valve feedback bias, left and right          :internal:

These signed bytes range between -128 (0x80) and +127 (0x7f).
Negative values bias towards opening the valve (heating) and positive
values bias towards closing the valve (cooling).

It's biased by the heater feedback reference (0x0e, 0x0f) and the
mixing chamber temprature (0x05, 0x06).


** 0x14, 0x15 – water valve solenoid duty cycle, left and right      :output:

These unsigned bytes range between 0 (0%, valve closed) and 255 (0xff,
100%, valve open).


** 0x16 – engine coolant temperature                                  :input:

This signed byte ranges between 5 and 130 (0x82) within its functional
range.  Within the functional range the raw value is the actual value
in °C as is.

Engine coolant temperature is used for prevention of overheating of
the engine.


** 0x17 – evaporator temperature                                      :input:

This unsigned byte ranges between 0 (0 °C) and 126 (0x7e, 63 °C).
This temperature value controls the air conditioner compressor request
line.  The actual value in °C is calculated with the following
formula:

: actual = raw / 2

The A/C compressor request turns on when this value is 14 (7 °C) or
greater, and off when it falls to 10 (5 °C) or below.  The compressor
request line is routed through the refrigerant pressure switch to the
compressor safety cut-out module.

The math formula matches exterior temperature formula and is currently
considered accurate.


** 0x18 – engine overheat protection status                        :internal:

This byte is bitmapped.  Bits 6 and 7 are status indicators and bits 0
to 5 are a counter.

| bit | description                                  |
|-----+----------------------------------------------|
|   7 | overheat protection stage 2 active (127-122) |
|   6 | overheat protection stage 1 active (122-117) |
| 0-5 | counter (<20 = compressor enabled)           |

During stage 1 the counter counts from 0 to 39 (0x27).  Engine
overheat protection stage 1 is activated when engine coolant
temperature reaches 122.  Overheat protection deactivates at engine
coolant temperature 117.  In stage 1 A/C compressor duty cycle is
reduced to 50%, 20 seconds on and 20 seconds off.

During stage 2 the counter value is fixed to 62 (0x3e).  Engine
overheat protection stage 2 activates at engine coolant
temperature 127.  The protection mode returns to stage 1 at engine
coolant temperature 122.  In stage 2 actuation of A/C compressor is
inhibited.


** 0x19 – interior temperature, dampened                           :internal:

See 0x07.  This value follows the interior temperature sensor in a
dampened manner.  It is used for temperature control to avoid
unnecessary abrupt temperature control changes.


** 0x1a – user input and intense cooling control                    :bitmask:

*** 0x1a bit 7 – unused

Appears to be static 0.


*** 0x1a bit 6 – intense cooling mode                              :internal:

This bit is set when the control unit operates in intense cooling
mode.  The switching thresholds from control values 0x09 and 0x0a have
been observed to be as follows:

- On when the control values are 17-18 (3.4-3.6 °C) or greater.
- Off when the control values are 10-11 (2.0-2.2 °C) or less.
- During self-calibration intense cooling has been observed to turn
  off at 2-3 (0.4-0.6 °C).  This may be intentional to rapidly cool a
  car that has been parked in the sun.

The currently available data captures cannot offer less fuzzy
thresholds.


**** TODO Simulate interior temperature to obtain precise thresholds


*** 0x1a bit 5 – user intervention, temperature adjustment, right :internal:

This bit is set when the user is making a temperature adjustment.  If
the adjustment is larger than three units (0.6 °C), the control unit
calculates a timer value for the requested temperature.


*** 0x1a bit 4 - user intervention, mode change                    :internal:

This bit is briefly set when the user has made a mode change.  Since
the bit is typically set for a very short time, it is most often never
seen to change state.


*** 0x1a bit 3 – user intervention, temperature adjustment, left   :internal:

See 0x1a bit 5.


*** 0x1a bit 2 – button status: reheat                                :input:

This bit indicates the status of reheat mode.  When this bit is set,
the red LED on the button is lit.

When this mode is enabled, the air conditioning compressor is
requested whether cooling is needed or not.  The primary use for this
is to dry the interior air in case the moisture in the air tends to
concentrate on the windscreen or other windows.


*** 0x1a bit 1 – button status: economy mode (EC)                     :input:

This bit indicates the status of economy mode.  When this bit is set,
the red LED on the button is lit.

When this mode is enabled, the air conditioning compressor request is
inhibited and middle vents are set to bypass heating.  Air
recirculation is limited to five minutes at a time.


*** 0x1a bit 0 – button status: recirculation                         :input:

This bit indicates the status of manually requested interior air
recirculation.  When this bit is set, the red LED on the button is
lit.

The requested recirculation is always 100% and is limited to
20 minutes with A/C enabled or 5 minutes in economy mode.


** 0x1b – circulation timer                                        :internal:

This (expected to be) unsigned value contains the amount of minutes
until air recirculation is automatically switched off to fresh air.

The countdown starts from 20 (0x14) when air conditioning compressor
is enabled and 5 when air conditioning is inhibited.


** 0x1c – actuator control                                          :bitmask:

*** 0x1c bit 7 – water circulation pump                              :output:

This bit is set when the water circulation pump is running.

In cooling mode, engine coolant over 80 °C, it appears that the
circulation pump switches at following thresholds.

- Off when the mid-speed heater drive goes down to 20-22.
- On when either mid-speed heater drive reaches up to 40.  (Note: the
  experimentally calculated reference temperature at slow heater drive
  value 40 is 10 °C, which is the lowest possible temperature to be
  measured by the mixing chamber temperature circuit.)


**** TODO Simulate various values of engine coolant temperature

The engine coolant temperature may affect when the circulation pump is
switched on and off.  Therefore the engine coolant should be simulated
at certain fixed values to obtain accurate switching thresholds.

The heater drive values are easiest to accurately control by
simulating the interior temperature.


*** 0x1c bit 6 – unused

Appears to be static 0.


*** 0x1c bit 5 – unused

Appears to be static 0.


*** 0x1c bit 4 – A/C compressor request                              :output:

This bit is set when the A/C compressor request line is driven.  The
heater blower must be on for activation and economy mode (EC) must be
off.


*** 0x1c bit 3 – air recirculation, 80%                              :output:

This bit is set when the vacuum valve for 80% air recirculation is
driven.


*** 0x1c bit 2 – air recirculation, 100%                             :output:

This bit is set when the vacuum valve for 100% air recirculation is
driven.  Bit 3 is always set together with this one.


*** 0x1c bit 1 – radiator blower, stage II                           :output:

This bit is set when the relay for radiator blower stage II is driven.
Radiator blower is switched on at engine coolant temperature sensor
value 107 and off at 100.

Radiator blower stage I is controlled by a pressure switch in the high
pressure side of the refrigerant circuit.


*** 0x1c bit 0 – temp-control for middle dash vents                  :output:

This bit is set when the vacuum valve for middle dash vents
temperature control flaps is driven.

: 0 = temperature control bypassed
: 1 = middle vents temperature-controlled

When the middle vents are temperature-controlled, they can also be
closed to "leak air" state.  However, this function is not controlled
by this control unit.


** 0x1d – temperature control                                       :bitmask:

*** 0x1d bit 7 – recirculation enabled for intense cooling         :internal:

This has been observerd to be set two minutes after switching on
ignition.


*** 0x1d bit 6 – self-calibration                                  :internal:

When set, the control unit is performing a self calibration.  Water
circulation pump is switched off during this time.


*** TODO 0x1d bit 5 – temperature control mode                     :internal:

If left and right control values (0x09 and 0x0a) are roughly the same,
the temperature control switches to cooling when the values go above
+3 (+0.6 °C) and heating when the values go below -7 (0xf9, -1.4 °C).

It has been observed that with a temperature setting difference of
1.0 °C both control values must go down to -8 before mode is switched
to heating.

: 0 = heating
: 1 = cooling

In the heating mode automatic A/C compressor request is inhibited.


*** TODO 0x1d bit 4 – exterior frosting                            :internal:

This bit is set to 1 when the exterior temperature rises up to 1.0 °C
(+2 in raw value).  The bit is cleared to 0 when the exterior
temperature falls down to -0.5 °C (-1 in raw value).

The names of bit 4 and bit 5 need to be rethought as they are likely
direct control bits for automatic A/C function.


*** 0x1d bit 3 - defrost, right                                       :input:

This bit is set when the temperature control dial is turned all the
way to its hot end stop.


*** 0x1d bit 2 - max cooling, right                                   :input:

This bit is set when the temperature control dial is turned all the
way to its cold end stop.


*** 0x1d bit 1 - defrost, left                                        :input:

See 0x1d bit 3


*** 0x1d bit 0 - max cooling, left                                    :input:

See 0x1d bit 2


** 0x1e, 0x20 – temperature dial value, dampened, left and right   :internal:

These values follow the values of the temperature setting dials.  The
stepping speed to reach the value is defined by 0x1f and 0x21 in
seconds in a manner that the target value is reached in about
5 minutes.

For minor changes up to 0.6 °C, or 3 raw units, the timer is not used.

For range, see 0x00.


** 0x1f, 0x21 – time, temperature dial damping, left and right     :internal:

When active, these unsigned values range between 4 and 75 (0x4b).
They're otherwise 0.

By observation this value is a time in seconds to advance the dampened
temperature dial value towards the current user requested value.

The temperature change made must be over 0.6 °C, or 3 in raw value to
trigger the timer.  By minimum change of 0.8 °C the time value is set
to 75 seconds, which results in the target being reached in 4 * 75 =
300 seconds, or five minutes.


** 0x22 – static 0x00                                         :sync:internal:

This and the following six bytes have been used for data stream
synchronisation.  The actual meaning of these bytes is mostly unknown
but they appear to be static data and therefore useful for easy sync.


** 0x23 – static 0x03                                         :sync:internal:


** 0x24 – static 0x04                                         :sync:internal:


** 0x25 – static 0x01                                         :sync:internal:


** 0x26 – static 0x23                                         :sync:internal:

Most likely a version number, possibly hardware revision identifier.
The number is 35 in base 10.


** 0x27 – static 0x02                                         :sync:internal:


** 0x28 – static 0x3b or 0x3c                                 :sync:internal:

Most likely a version number, possibly software.  59 (0x3b) has been
seen on two cases and 60 (0x3c) was seen on two facelift versions.


* Serial data electricals

The serial data supplied from socket 7 of the diagnostics connector
block is basically 8-N-1 at 4,800 bps with about 30 ms gaps between
frames.  The only major difference to RS-232 or TTL are the
transmission line voltage levels used. See the table below:

|       | RS-232    | TTL    | MB AC  |
|-------+-----------+--------+--------|
| mark  | -15..-3 V | +5.0 V | +8.0 V |
| space | +3..+15 V | +0.0 V | +0.8 V |

For research purposes the output from the vehicle was converted to TTL
by means of a simple circuit of diodes and resistors to use an FTDI
TTL-232R-5V "USB to TTL Serial Cable".  This is what the initial
datalogging and decoder programs written in Python were designed
around.


* Control unit connector pinout

The following pinout table was created by reverse engineering the
research platform.  This allows further understanding of the
limitations of what the control unit can do.


| pin | wire colour         | IO | description                                       |
|-----+---------------------+----+---------------------------------------------------|
|   1 | brown  green        | /O | heating water recirculation pump                  |
|   2 | white  green        | /O | heating water valve, left  (active low to shut)   |
|   3 | white  blue         | /O | heating water valve, right (active low to shut)   |
|   4 | blue   green  white | /O | A/C compressor request                            |
|   5 | green  blue         | /O | solenoid valve, air recirculation, 100%           |
|   6 | green  violet       | /O | solenoid valve, air recirculation,  80%           |
|   7 | brown  grey         | /O | radiator blower stage II                          |
|-----+---------------------+----+---------------------------------------------------|
|   8 |                     |    | n/c (unused input, floats around 5 V)             |
|   9 | grey   yellow       | /I | interior air temperature sensor                   |
|  10 | grey   black        | /I | exterior air temperature sensor                   |
|  11 | grey   green        | /I | mixing chamber air temperature sensor, left       |
|  12 | grey   red          | /I | mixing chamber air temperature sensor, right      |
|  13 | grey   white        | /I | post-evaporator air temperature sensor            |
|  14 | blue   grey         | /I | engine coolant (heating water) temperature sensor |
|-----+---------------------+----+---------------------------------------------------|
|  15 | yellow white        | IO | diagnostic connector                              |
|  16 | black  green  white | I  | heater blower (>11 V when blower is switched on)  |
|  17 | black  pink         | I  | 15, power supply                                  |
|  18 | grey   blue         | I  | 58d, instrument panel lights                      |
|  19 | green  black        | /O | solenoid valve, center vents temperature control  |
|  20 | brown               | c  | 31, ground                                        |
|  21 | brown  yellow       | c  | temperature sensor ground                         |

: c  = common, ie. a ground reference
: /I = input, resistive sensor or switch to ground
: /O = output, active low ie. switched to ground when active


** Sensor electricals

These tables were obtained by connecting various resistances to
temperature sensor inputs.  This also allowed calculating values for
the pull-up resistors.

These tables serve as an aid to match potentiometer values when
building a testing rig for these control units.

A calibration point for the air temperature sensors seems to be at
3.00 volts.  At this signal level all the readings are very close to
16 °C.


*** Interior air, mixing chamber, and evaporator temperatures – pins 9, 11, 12, 13

mix : Mixing chamber temperature (0x05 and 0x06) – resistance range
between 820 Ω and 20 kΩ, voltage range between 3.34 V and 0.38 V.

int. : Interior air temperature (0x07) – resistance range between
2.2 kΩ and 46 kΩ, voltage range between 4.11 V and 0.94 V.

evap. : Evaporator temperature (0x17) – resistance range between
1.8 kΩ and 34 kΩ, voltage range between 3.87 V and 0.76 V.

| resistance | voltage | int. | temp | mix |  temp | evap. | temp |
|------------+---------+------+------+-----+-------+-------+------|
|       open |    5.03 |      |      |     |       |       |      |
|      45500 |    4.11 | -128 | -0.4 |     |       |       |      |
|      44600 |    4.11 | -127 | -0.2 |     |       |       |      |
|      33560 |    3.87 | -109 |  3.4 |     |       |     0 |  0.0 |
|      32110 |    3.84 | -106 |  4.0 |     |       |     1 |  0.5 |
|      21880 |    3.46 |  -78 |  9.6 |     |       |    16 |  8.0 |
|      19610 |    3.34 |  -69 | 11.4 |   0 | 12.00 |    21 | 10.5 |
|      19360 |    3.32 |  -68 | 11.6 |   1 | 12.25 |    21 | 10.5 |
|      14900 |    3.01 |  -46 | 16.0 |  18 | 16.50 |    32 | 16.0 |
|      10050 |    2.53 |  -12 | 22.8 |  44 | 23.00 |    50 | 25.0 |
|       4680 |    1.61 |   58 | 36.8 |  99 | 36.75 |    87 | 43.5 |
|       3244 |    1.24 |   94 | 44.0 | 128 | 44.00 |   105 | 52.5 |
|       2406 |    0.98 |  125 | 50.2 | 152 | 50.00 |   119 | 59.5 |
|       2276 |    0.94 |  126 | 50.4 | 156 | 51.00 |   121 | 60.5 |
|       2153 |    0.89 |      |      | 160 | 52.00 |   123 | 61.5 |
|       1776 |    0.76 |      |      | 176 | 56.00 |   126 | 63.0 |
|       1504 |    0.66 |      |      | 191 | 59.75 |       |      |
|        998 |    0.46 |      |      | 226 | 68.50 |       |      |
|        875 |    0.41 |      |      | 240 | 72.00 |       |      |
|        817 |    0.38 |      |      | 243 | 72.75 |       |      |
|    shorted |    0.00 |      |      |     |       |       |      |
#+TBLFM: $4=($3+126)/5;%.1f::$6=($5+48)/4;%.2f::$8=$7/2;%.1f

Pull-up resistor value is 10 kΩ.


*** Exterior air temperature – pin 10

Data index 0x08.  Sensor resistance ranges between 100 Ω and >70 kΩ.
Signal voltage ranges between 4.88 V and 0.17 V.  Measurements of
resistances over 70 kΩ are flaky at best, and therefore irrelevant.
Value of -63 is never seen.

| resistance | voltage | value |  temp |
|------------+---------+-------+-------|
|       open |    5.04 |       |       |
|      87300 |    4.88 |   -64 | -32.0 |
|      75200 |    4.86 |   -62 | -31.0 |
|      69200 |    4.84 |   -62 | -31.0 |
|      66900 |    4.84 |   -61 | -30.5 |
|      47000 |    4.76 |   -55 | -27.5 |
|      32760 |    4.65 |   -46 | -23.0 |
|      21880 |    4.48 |   -33 | -16.5 |
|      14900 |    4.26 |   -17 |  -8.5 |
|      10050 |    3.96 |    -4 |  -2.0 |
|       4680 |    3.18 |    27 |  13.5 |
|       3244 |    2.73 |    43 |  21.5 |
|       2703 |    2.50 |    51 |  25.5 |
|       2153 |    2.22 |    62 |  31.0 |
|       1776 |    1.98 |    70 |  35.0 |
|       1504 |    1.79 |    78 |  39.0 |
|        998 |    1.35 |    92 |  46.0 |
|        817 |    1.16 |    97 |  48.5 |
|        676 |    1.00 |   102 |  51.0 |
|        117 |    0.21 |   125 |  62.5 |
|         95 |    0.17 |   126 |  63.0 |
|    shorted |    0.00 |       |       |
#+TBLFM: $4=$3/2;%.1f

Pull-up resistor value is 2.7 kΩ.


*** Engine coolant temperature – pin 14

Data index 0x16.  Resistance range between 158 Ω and 13 kΩ.  Voltage
range between 3.80 V and 1.00 V.  Value of 6 is never seen.

| resistance | voltage | value |
|------------+---------+-------|
|       open |    5.04 |       |
|      14900 |    4.83 |       |
|      12570 |    4.80 |     5 |
|      11480 |    4.78 |     7 |
|      10050 |    4.74 |     9 |
|       4680 |    4.44 |    26 |
|       3244 |    4.21 |    34 |
|       2153 |    3.89 |    45 |
|       1776 |    3.71 |    50 |
|       1504 |    3.55 |    54 |
|        998 |    3.08 |    66 |
|        817 |    2.84 |    72 |
|        676 |    2.60 |    78 |
|        457 |    2.11 |    90 |
|        182 |    1.12 |   124 |
|        162 |    1.02 |   129 |
|        158 |    1.00 |   130 |
|    shorted |    0.00 |       |

Pull-up resistor value is likely 560 Ω.


* Tested vehicles

The following vehicles were equipped with basic "Tempmatic" air
conditioning, SA code 580.

- 124.092 – 320 TE (the original research platform, control module
  part number: 124 830 38 85, Bosch 9 140 010 183)
- 124.191 – E 300 DIESEL (facelift; this was the exception that had
  0x3c as the last sync byte instead of 0x3b)
- 124.193 – 300 TD TURBODIESEL / E 300 TURBODIESEL
  - Car #1 was pre-facelift and the last sync byte was 0x3b.
  - Car #2 was facelift and the last sync byte was 0x3c.

** Known not to work

The following vehicle was equipped with fully automatic air
conditioning, SA code 581.

- 124.131 – E 300 DIESEL (US version, SA code 494; facelift) – no data
  stream)


* Unfinished analysis notes

This section contains notes of observations that aren't necessarily
definitive at this point.  Some of it may be correct, but much will be
incorrect guesses.

[2024-04-23 Tue] A loose control unit (MB 124 830 38 85 / Bosch 9 140
010 183, facelift version, sw 2/60) was acquired for off-car research
purposes.


** Temperature reference

[2024-03-21 Thu] It seems to be that a kind of a "zero" reference
temperature is likely 25 °C.


** Supply voltage monitoring

The control unit doesn't have any apparent supply voltage monitoring.
This was tested with a lab power supply by feeding power into the
output contact of fuse #7.  The control unit failed to operate when
supply voltage was set down to 5.3 volts, and resumed at 6.0 volts.

Observed on the recently acquired control unit: detection of maximum
cooling position failed with supply voltage <7.0 volts.

The voltage was required to stay high enough to start the coolant
recirculation pump without affecting control unit operation.

In low voltage operation it was possible for the control unit watchdog
to fail to reset the microcontroller.


** 0x0b – exterior temperature bias

The value appears to bias temperature adjustment targets from actual
dial values +as well as water valve feedback control+.

+For water valve control the bias temperature seems to be ~raw / 5~,
but it needs to be verified.+ We shall forget the water valve here
for now as it's much too vague.

[2023-07-23 Sun] The following description is partly correct. The bias
value is offset one way or the other by the temperature settings at
the dials.

The following observation appears to be correct only if both
temperature dials are set at the same value! Whether the temperature
control is functioning in heating or cooling mode may also skew the
values. Self-calibration can also break logic, as two different data
captures seem to show offsetting.

For adjustment targets the no bias spot is at -14/-15 (0xf2/0xf3). To
calculate the amount to shift from user-requested temperature to
adjustment target, use the following formula (// = integer division):

: adjustment target bias = -1 * (((ext.temp bias + 1) // 2) + 7)

If you want the actual temperature difference value in °C, divide the
above raw value by 5.


* Test rig theory

To create a test rig for these control units, partial automation would
most likely be useful.  With some consideration the two parameters to
set manually would be the exterior temperature and the engine coolant
temperature.  Other temperature values can be derived from those with
op-amp integrators controlled by various actuators.

Since the temperature sensors operate as current sinks to ground, they
can be simulated with simple NPN transistor circuits that are driven
by op-amps in voltage follower configuration, the voltage to follow
being the sensor circuit voltage.

Water valve and A/C compressor actuation circuits should be buffered
through PNP transistor circuits.  The purpose is to isolate the
actuation circuits from affecting op-amp circuits.  This will also
allow proper loading of the actuation circuits if necessary.

:     [water valve]   [A/C] -->(i)<-- {ext.}
:           |                   |       |
:           v                   v       |
: {ECT} -->(i)<-------------- evap.     |
:           |                           |
:           v                           |
:          mix --->(i)<-----------------/
:                   |
:                   v
:                  int.

The mixing chamber temperature (~mix~ in the diagram above) should be
created with an integrator that approaches either engine coolant
temperature (~{ECT}~) or evaporator temperature (~evap.~) depending on
water valve actuation.

The evaporator temperature should be created by an integrator that
approaches exterior temperature (~{ext.}~) or negative infinity
depending on A/C compressor actuation (~[A/C]~).

The interior temperature should be created by an integrator that
approaches the average of left and right mixing chamber temperatures.
This may be biased by the exterior temperature.  A possible
consideration would be to slow down the integrator when the difference
between mixing chamber temperatures and the exterior temperature are
large and speed it up when air recirculation is active.
